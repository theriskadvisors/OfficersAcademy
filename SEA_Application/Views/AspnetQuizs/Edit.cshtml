@model SEA_Application.Models.AspnetQuiz

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_TeacherDashboardLayout.cshtml";
}

<script>
    $(document).ready(function () {

        //$("#btnCancel").click(function () {

        //    window.location.href = "/AspnetQuizs/Index";
        //})


        var course = 'CSS';

        $('#CTId').change(function () {

            $('#TopicId').html('');

            var crse = $(this).val();

            if (crse != "") {

                console.log(crse);
                course = crse;
                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/GetSubjectsByClass?CT=" + course,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $("#SubjectId");
                        var $e2 = $("#TopicId");
                        $e2.empty();
                        $el.empty();
                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Subject'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].SubjectName));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select'));
                        }
                    }
                });
            }
            else {

                   var $el = $("#SubjectId");
                    $el.empty();
                    var $e2 = $("#TopicId");
                    $e2.empty();
                 var $e3 = $("#QuestionID");
                    $e3.empty();
            }


        });

       //$('#SubjectId').change(function () {

       //     var subid = $(this).val();
       //     console.log(subid);

       //     $.ajax({
       //         type: "POST",
       //         cache: false,
       //         url: "/AspNetProject/GetTopic?SubID=" + subid,
       //         processData: false,
       //         contentType: false,
       //         success: function (data) {
       //             debugger
       //             var sch = JSON.parse(data);
       //             console.log(sch);
       //             var $el = $("#TopicId");
       //             $el.empty();
       //             if (sch.length > 0) {
       //                 $el.append($("<option></option>")
       //                     .attr("value", 0).text('Select Topic'));
       //                 for (i = 0; i < sch.length; i++) {

       //                     $el.append($("<option></option>")
       //                         .attr("value", sch[i].Id).text(sch[i].Name));
       //                 }
       //             }
       //             else {
       //                 $el.append($("<option></option>")
       //                     .attr("value", '').text('Select'));
       //             }
       //         }
       //     });

       // });

         $("#TopicId").click(function () {
            var selectedTopic = $("#TopicId").val();
            debugger
            $.ajax({
                url: '@Url.Action("QuestionsByTopics")',
                type: 'GET',
                dataType: 'json',
                cache: false,
                traditional: true,
                data: { bdoIds: selectedTopic },

            }).done(function (response) {
                $('#QuestionID').html('');

                $.each(response, function (i, item) {

                    debugger
                    // var classname = $("#ClassID option[value='" + item.ClassID + "']").text();
                    $('#QuestionID').append('<option value=' + item.Id + '>' + item.Name + ' </option>');
                });
            })


        });


        $("#SubjectId").change(function () {

            var SubjectId = $("#SubjectId").val();

            $.ajax({

                type: "POST",
                url: "/AspnetQuizs/GetSubjectTopics",
                data: { "SubjectId": SubjectId },
                success: function (data) {

                    $('#TopicId').html('');

                         $('#QuestionID').html('');
                    $.each(data, function (i, item) {

                        debugger
                        // var classname = $("#ClassID option[value='" + item.ClassID + "']").text();
                        $('#TopicId').append('<option value=' + item.Id + '>' + item.Name + ' </option>');




                    });

                }


            })


        })



    })
</script>




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="box box-primary">
    <div class="box-title"></div>

    <div class="box-body">
        <div class="form-horizontal">
            <h4>AspnetQuiz</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Start_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">

                    <input class="form-control"  type="date" name="Start_Date" value="@ViewBag.StartDate" />
                    @Html.ValidationMessageFor(model => model.Start_Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Due_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <input type="date"   class="form-control" name="Due_Date" value="@ViewBag.DueDate" />

                    @Html.ValidationMessageFor(model => model.Due_Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    <label>Course Type <span class="text-danger">*</span></label>
                </div>
                <div class="col-md-6">

                    @Html.DropDownList("CTId", new List<SelectListItem>
                      {

                    new SelectListItem{ Text="Select One", Value = "" },
                       new SelectListItem{ Text="CSS", Value = "CSS" },
                      new SelectListItem{ Text="PMS", Value = "PMS" },

                       }, htmlAttributes: new { @class = "form-control", @required = true })

                </div>
            </div>

            <div class="form-group">
                <label class="col-md-2">Subject</label>
                <div class="col-md-6">
                    @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control", @required = true })

                </div>
            </div>


            <div class="form-group">

                <div class="col-md-12">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="box box-primary">
                                <div class="box-header with-border"><h3 class="orange">Topics:<span class="red-mark">*</span></h3></div>


                                <div class="box-body">
                                    @Html.ListBox("TopicId", null, htmlAttributes: new { @required = true, @class = "form-control", @style = "height:400px;" })
                                </div>
                            </div>
                        </div>


                        <div class="col-md-6">
                            <div class="box box-primary">
                                <div class="box-header with-border"><h3 class="orange">Questions:<span class="red-mark">*</span></h3></div>

                                <div class="box-body">
                                    @Html.ListBox("QuestionID", null, htmlAttributes: new { @required = true,  @class = "form-control", @style = "height:400px;" })

                                </div>
                            </div>
                        </div>

                        @*<div class="form-group">
                                <div class="col-md-offset-1 col-md-10">
                                    <button type="button" id="edit" class="btn btn-primary" onclick="redirectToEdit()">Edit</button>

                                </div>
                            </div>*@

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-6">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>

    </div>
</div>
            
            }
