@model SEA_Application.Models.LessonViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TeacherDashboardLayout.cshtml";
}

<script>
    $(document).ready(function () {
    $.ajax({
        type: "POST",
        cache: false,
        url: "/AspnetLessons/LoadSectionIdDDL",
        processData: false,
        contentType: false,
        success: function (data) {
            var sch = JSON.parse(data);

            var $el = $(".SecIdDDL");
            $el.empty();
            if (sch.length > 0) {
                $el.append($("<option></option>")
                             .attr("value", 0).text('Select Section'));
                for (i = 0; i < sch.length; i++) {
                    $el.append($("<option></option>")
                            .attr("value", sch[i].Id).text(sch[i].ClassName));
                }
            }
            else {
                $el.append($("<option></option>")
                           .attr("value", '').text('Select'));
            }
        }
    });


    var course = 'CSS';
    var Class;
    $('#CTId').change(function () {
        
        var crse = $(this).val();
        console.log(crse);
        course = crse;
        $.ajax({
            type: "POST",
            cache: false,
            url: "/AspNetProject/GetSubjectsByClass?ClassID=" + Class + "&&CT=" + course,
            processData: false,
            contentType: false,
            success: function (data) {
                var sch = JSON.parse(data);
                console.log(sch);
                var $el = $(".SubIdDDL");
                $el.empty();
                var $e2 = $(".TopicIdDDL");
                $e2.empty();
                if (sch.length > 0) {
                    $el.append($("<option></option>")
                                 .attr("value", 0).text('Select Subject'));
                    for (i = 0; i < sch.length; i++) {

                        $el.append($("<option></option>")
                                .attr("value", sch[i].Id).text(sch[i].SubjectName));
                    }
                }
                else {
                    $el.append($("<option></option>")
                               .attr("value", '').text('Select'));
                }
            }
        });
    });


    $('#SecId').change(function () {
      
        var UserName = $(this).val();
        console.log(UserName);
        Class = UserName;
        $.ajax({
            type: "POST",
            cache: false,
            url: "/AspNetProject/GetSubjectsByClass?ClassID=" + UserName + "&&CT=" + course,
            processData: false,
            contentType: false,
            success: function (data) {
                var sch = JSON.parse(data);
                console.log(sch);
                var $el = $(".SubIdDDL");
                $el.empty();
                var $e2 = $(".TopicIdDDL");
                $e2.empty();
                if (sch.length > 0) {
                    $el.append($("<option></option>")
                                 .attr("value", 0).text('Select Subject'));
                    for (i = 0; i < sch.length; i++) {

                        $el.append($("<option></option>")
                                .attr("value", sch[i].Id).text(sch[i].SubjectName));
                    }
                }
                else {
                    $el.append($("<option></option>")
                               .attr("value", '').text('Select'));
                }
            }
        });

    });

        
    $('#SubId').change(function () {
      
        var subid = $(this).val();
        console.log(subid);
     
        $.ajax({
            type: "POST",
            cache: false,
            url: "/AspNetProject/GetTopic?SubID=" + subid,
            processData: false,
            contentType: false,
            success: function (data) {
                var sch = JSON.parse(data);
                console.log(sch);
                var $el = $(".TopicIdDDL");
                $el.empty();
                if (sch.length > 0) {
                    $el.append($("<option></option>")
                                 .attr("value", 0).text('Select Topic'));
                    for (i = 0; i < sch.length; i++) {

                        $el.append($("<option></option>")
                                .attr("value", sch[i].Id).text(sch[i].Name));
                    }
                }
                else {
                    $el.append($("<option></option>")
                               .attr("value", '').text('Select'));
                }
            }
        });

    });

    })
    </script>


<style>
    .help-block
    {
        color:red;
    }

       .page-sidebar .page-sidebar-menu, .page-sidebar-closed.page-sidebar-fixed .page-sidebar:hover .page-sidebar-menu {
        list-style: none;
        margin: 0;
        padding: 0;
        height: 1700px !important;
    }
       #TextAreaBox
       {
           height:400px;
           width:600px;


       }


</style>

<div class="box ">

    @*<div class=""><h3 class="orange">Lesson Basic Info<span class="red-mark">*</span></h3></div>*@
    <div class="box-body">

        @using (Html.BeginForm("Create", "AspnetLessons", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
        <div class="form-horizontal">


            <div class="box box-primary">
                <div class="box-header with-border"><h3 class="orange">Lesson Basic Info<span class="red-mark">*</span></h3></div>
                <div class="box-body row">




                    @Html.AntiForgeryToken()



                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.LessonName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.LessonName, new { htmlAttributes = new { @class = "form-control", @required = true } })
                            @Html.ValidationMessageFor(model => model.LessonName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LessonVideoURL, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.LessonVideoURL, new { htmlAttributes = new { @placeholder = "Provide only one link at a time. Only Allow youtube videos", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LessonVideoURL, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.LessonDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.LessonDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LessonDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-2">
                            <label>Section <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-6">
                            <select class="form-control SecIdDDL" id="SecId" name="SecId"></select>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-2">
                            <label>Course Type <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-6">
                            <select class="form-control CTIdDDL" id="CTId" name="CTId">
                                <option value="CSS">CSS</option>
                                <option value="PMS">PMS</option>

                            </select>
                            
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-2">
                            <label>Subject <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-6">
                            <select class="form-control SubIdDDL" id="SubId" name="SubId"></select>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-2">
                            <label>Topic <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-6">
                            <select class="form-control TopicIdDDL" id="TopicId" name="TopicId"></select>
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.TopicId, "TopicId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.DropDownList("TopicId", null, "Select One", htmlAttributes: new { @class = "form-control", @required = true })
                            @Html.ValidationMessageFor(model => model.TopicId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.LessonDuration, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            <input type="time" class="form-control" name="LessonDuration" value="" id="LessonDuration" required />
                            @Html.ValidationMessageFor(model => model.LessonDuration, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>


            <div class="box box-primary">
                <div class="box-header with-border"><h3 class="orange">Student Assignment</h3></div>
                <div class="box-body row">


                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignmentName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.AssignmentName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AssignmentName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignmentDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.TextAreaFor(model => model.AssignmentDescription, new { htmlAttributes = new { id = "TextAreaBox",@class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AssignmentDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">

                        <label class="control-label col-md-2"> Student Assigment</label>

                        <div class="col-md-6">

                            <div class="btn btn-default btn-file ">
                                <i class="fa fa-paperclip"></i> Choose File Option:
                                <input type="file" id="Assignment" name="Assignment">
                            </div>
                            <div class="">
                                <p class="help-block">Max. 32MB. (File Name Should be unique)  </p>
                            </div>

                        </div>

                    </div>

                    @*<div class="form-group">
                    @Html.LabelFor(model => model.AssignmentDueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">

                        <input type="date" name="AssignmentDueDate" id="AssignmentDueDate" value="" class="form-control" />

                        @Html.ValidationMessageFor(model => model.AssignmentDueDate, "", new { @class = "text-danger" })


                    </div>
                </div>*@
                </div>
            </div>

            <div class="box box-primary">
                <div class="box-header with-border"><h3 class="orange">Reading Material</h3></div>
                <div class="box-body row">

                    <div class="form-group">
                        @Html.LabelFor(model => model.AttachmentName1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.AttachmentName1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AttachmentName1, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">

                        <label class="control-label col-md-2"> Attach File-1</label>

                        <div class="col-md-6">


                            <div class="btn btn-default btn-file ">
                                <i class="fa fa-paperclip"></i> Choose File Option:
                                <input type="file" id="Attachment1" name="Attachment1">
                            </div>

                            <div>
                                <p class="help-block">Max. 32MB. (File Name Should be unique) </p>
                            </div>

                        </div>

                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.AttachmentName2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.AttachmentName2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AttachmentName2, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">

                        <label class="control-label col-md-2"> Attach File-2</label>
                        <div class="col-md-6">

                            <div class="btn btn-default btn-file ">
                                <i class="fa fa-paperclip"></i> Choose File Optioin:
                                <input type="file" id="Attachment2" name="Attachment2">
                            </div>

                            <div>
                                <p class="help-block">Max. 32MB. (File Name Should be unique) </p>
                            </div>
                        </div>

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AttachmentName3, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.AttachmentName3, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AttachmentName3, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">

                        <label class="control-label col-md-2"> Attach File-3</label>
                        <div class="col-md-6">

                            <div class="btn btn-default btn-file ">
                                <i class="fa fa-paperclip"></i> Choose File Option:
                                <input type="file" id="Attachment3" name="Attachment3">
                            </div>

                            <div class="    ">
                                <p class="help-block">Max. 32MB. (File Name Should be unique) </p>
                            </div>

                        </div>

                    </div>

                </div>
            </div>
            <div class="box box-primary">
                <div class="box-header with-border"><h3 class="orange">Material Links (URL) </h3></div>
                <div class="box-body row">

                    <div class="form-group">
                        @Html.LabelFor(model => model.LinkUrl1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.LinkUrl1, new { htmlAttributes = new { @placeholder = "Enter Data Must be a URL",@class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LinkUrl1, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.LinkUrl2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.LinkUrl2, new { htmlAttributes = new { @placeholder = "Enter Data Must be a URL", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LinkUrl2, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="form-group">
                        @Html.LabelFor(model => model.LinkUrl3, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.LinkUrl3, new { htmlAttributes = new {@placeholder = "Enter Data Must be a URL", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LinkUrl3, "", new { @class = "text-danger" })
                        </div>
                    </div>





                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-6">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>

            </div>
        </div>

                }


            </div>
        </div>
