@model SEA_Application.Models.QuestionAnswerViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_TeacherDashboardLayout.cshtml";
}
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
@*<script src="~/Content/Toggle.js"></script>*@
<script src="~/Content/Toggle.js"></script>

<style>

    input[type='checkbox'] {
        width: 20px;
        height: 20px;
    }

    .checkbox input[type=checkbox], .checkbox-inline input[type=checkbox], .radio input[type=radio], .radio-inline input[type=radio] {
        position: absolute;
        margin-top: 4px\9;
        margin-left: 0px;
    }

    .page-sidebar .page-sidebar-menu, .page-sidebar-closed.page-sidebar-fixed .page-sidebar:hover .page-sidebar-menu {
        list-style: none;
        margin: 0;
        padding: 0;
        height: 1000px !important;
    }
</style>


<script>
    $(document).ready(function () {
       


        var course = 'CSS';
        var Class;
        $('#CTId').change(function () {

            var crse = $(this).val();

            console.log(crse);
            course = crse;
            if (crse != "") {
                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/GetSubjectsByClass?CT=" + course,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $("#SubId");
                        $el.empty();
                        var $e2 = $("#TopicId");
                        $e2.empty();
                        var $e3 = $("#LessonId");
                        $e3.empty();
                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Subject'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].SubjectName));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select'));
                        }
                    }
                });

            }
            else {

                var $el = $("#SubId");
                $el.empty();
                var $e2 = $("#TopicId");
                $e2.empty();
                var $e3 = $("#LessonId");
                $e3.empty();
            }
        });


    

        $('#TopicId').change(function () {

            
            var topid = $(this).val();
            console.log(topid);

            $.ajax({
                type: "POST",
                cache: false,
                url: "/AspNetProject/GetLession?TopID=" + topid,
                processData: false,
                contentType: false,
                success: function (data) {
                    var sch = JSON.parse(data);
                    console.log(sch);

                    var $el =  $("#LessonId");
                    $el.empty();
                    if (sch.length > 0) {
                        $el.append($("<option></option>")
                            .attr("value", "").text('Select Lesson'));
                        for (i = 0; i < sch.length; i++) {

                            $el.append($("<option></option>")
                                .attr("value", sch[i].Id).text(sch[i].Name));
                        }
                    }
                    else {
                        $el.append($("<option></option>")
                            .attr("value", '').text('Select'));
                    }
                }
            });

        });


        $('#SubId').change(function () {

            var subid = $(this).val();
            console.log(subid);

            $.ajax({
                type: "POST",
                cache: false,
                url: "/AspNetProject/GetTopic?SubID=" + subid,
                processData: false,
                contentType: false,
                success: function (data) {
                    var sch = JSON.parse(data);
                    console.log(sch);
                    var $el =  $("#TopicId");
                    $el.empty();
                           var $e1 = $("#LessonId");
                    $e1.empty();


                    if (sch.length > 0) {
                        $el.append($("<option></option>")
                            .attr("value", "").text('Select Topic'));
                        for (i = 0; i < sch.length; i++) {

                            $el.append($("<option></option>")
                                .attr("value", sch[i].Id).text(sch[i].Name));
                        }
                    }
                    else {
                        $el.append($("<option></option>")
                            .attr("value", '').text('Select'));
                    }
                }
            });

        });

    })
</script>


<div class="box box-primary">

    <div class="box-header with-border"><h3 class="orange">Edit Question & Answers<span class="red-mark">*</span></h3></div>
    <div class="box-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.QuestionName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.QuestionName, new { htmlAttributes = new { id = "textareastyle", @class = "form-control", @required = true } })
                    @Html.ValidationMessageFor(model => model.QuestionName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    <label>Course Type <span class="text-danger">*</span></label>
                </div>
                <div class="col-md-6">
                    @Html.DropDownList("CTId", new List<SelectListItem>
                    {

                  new SelectListItem{ Text="Select One", Value = "" },
                     new SelectListItem{ Text="CSS", Value = "CSS" },
                    new SelectListItem{ Text="PMS", Value = "PMS" },

                     }, htmlAttributes: new { @class = "form-control", @required = true })




                </div>
            </div>


            @*<div class="form-group">
            <div class="col-md-2">
                <label>Subject <span class="text-danger">*</span></label>
            </div>
            <div class="col-md-6">
                <select class="form-control SubIdDDL" id="SubId" name="SubId" required></select>
            </div>
        </div>*@


            @*<div class="form-group">
            <div class="col-md-2">
                <label>Topic <span class="text-danger">*</span></label>
            </div>
            <div class="col-md-6">
                <select class="form-control TopIdDDL" id="TopId" name="TopId" required></select>
            </div>
        </div>*@


            @*<div class="form-group">
            <div class="col-md-2">
                <label>Lesson <span class="text-danger">*</span></label>
            </div>
            <div class="col-md-6">
                <select class="form-control LessIdDDL" id="LessonId" name="LessonId" required></select>
            </div>
        </div>*@

            <div class="form-group">
                <label class="col-md-2">Subject</label>

                <div class="col-md-6">
                    @Html.DropDownList("SubId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2">Topic</label>

                <div class="col-md-6">
                    @Html.DropDownList("TopicId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2">Lesson</label>

                <div class="col-md-6">
                    @Html.DropDownList("LessonId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.QuestionIsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @*<div class="checkbox">
                    @Html.EditorFor(model => model.QuestionIsActive)
                    @Html.ValidationMessageFor(model => model.QuestionIsActive, "", new { @class = "text-danger" })
                </div>*@
                    <input type="checkbox" value="@ViewBag.IsMandatory" id="IsMandatory" name="IsMandatory" checked data-toggle="toggle">
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.QuestionIsQuiz, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.QuestionIsQuiz)
                        @Html.ValidationMessageFor(model => model.QuestionIsQuiz, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            @*<div class="form-group">
            @Html.LabelFor(model => model.QuestionIsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                <div class="checkbox">
                        @Html.EditorFor(model => model.QuestionIsActive)
                        @Html.ValidationMessageFor(model => model.QuestionIsActive, "", new { @class = "text-danger" })
                    </div>
                <input type="checkbox" id="IsMandatory" name="IsMandatory" checked data-toggle="toggle">
            </div>
        </div>*@



            <div class="form-group">
                @Html.LabelFor(model => model.QuestionType, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-6">

                    <select class="form-control" id="QuestionType" name="QuestionType" required>

                        <option value="MCQ" selected>MCQ</option>

                    </select>

                </div>

            </div>


            <div id="OptionsBlock" style="display:none;">

                <div class="form-group">
                    @Html.LabelFor(model => model.OptionNameOne, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.OptionNameOne, new { htmlAttributes = new { @class = "form-control", @required = true } })
                        @Html.ValidationMessageFor(model => model.OptionNameOne, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QuestionNameTwo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.QuestionNameTwo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QuestionNameTwo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QuestionNameThree, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.QuestionNameThree, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QuestionNameThree, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QuesitonNameFour, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.QuesitonNameFour, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QuesitonNameFour, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-2">
                        Select Correct Answer
                    </div>
                    <div class="col-md-6">

                        @Html.DropDownList("Answer", new List<SelectListItem>
                             {

                              new SelectListItem{ Text="Select One", Value = "" },
                              new SelectListItem{ Text="(a)", Value = "a" },
                              new SelectListItem{ Text="(b)", Value = "b" },
                              new SelectListItem{ Text="(c)", Value = "c" },
                              new SelectListItem{ Text="(d)", Value = "d" },

                              }, htmlAttributes: new { @class = "form-control", @required = true })



                    </div>

                </div>
            </div>


            <div class="form-group" id="FillAnswerBlock" style="display:none">
                <label class="control-label col-md-2">Enter Answer </label>
                <div class="col-md-6">

                    <input class="form-control" type="text" id="FillAnswer" name="FillAnswer" />


                </div>
            </div>




            @*<div class="form-group">
            @Html.LabelFor(model => model.AnswerId, "AnswerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AnswerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AnswerId, "", new { @class = "text-danger" })
            </div>
        </div>*@



            @*<div class="form-group">
            @Html.LabelFor(model => model.Is_Quiz, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Is_Quiz)
                    @Html.ValidationMessageFor(model => model.Is_Quiz, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Is_Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Is_Active)
                    @Html.ValidationMessageFor(model => model.Is_Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>*@


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
        }


    </div>
</div>
<script>

    $(document).ready(function () {

        $("#btnCancel").click(function () {

            window.location.href = "/AspnetQuestions/Index";
        })


        //    $("#QuestionType").change(function () {


        var QuestionType = "MCQ";

        if (QuestionType == "MCQ" || QuestionType == "TF") {

            $("#OptionsBlock").css('display', 'block');
            $("#FillAnswerBlock").css('display', 'none');

            $("#OptionsBlock input,select").prop('required', true);
            $("#FillAnswer").prop('required', false);
            $("#FillAnswer").val("");

        }
        else {

            $("#OptionsBlock input").val("");


            $("#OptionsBlock").css('display', 'none');
            $("#FillAnswerBlock").css('display', 'block');

            $("#OptionsBlock input,select").prop('required', false);
            $("#FillAnswer").prop('required', true);


        }



        //  })



    })

</script>