<label>@Html.ActionLink("Home", "Dashboard", "Account") > @Html.ActionLink("Subject", "ClassIndex", "AspNetSubject") > <a href="#"><b>Details</b></a> </label>
<h4>Subject</h4>

<div class="box box-primary">
    <div class="box-body">
       

        @model SEA_Application.Models.AspNetSubject

        @{
            ViewBag.Title = "Edit";
        }
        <script>
        $(document).ready(function () {
            $("#ClassID option[value='']").remove();
            $("#TeacherID option[value='']").remove();

           $('#cancel').click(function () {
            window.location.href = '@Url.Action("ClassIndex", "AspNetSubject")';
           });
        });

             
            $(document).ready(function () {
                $('select').prop('disabled', true)
                $('input').prop('disabled', true)
            });
            function redirect() {
                window.location.href = "/AspNetSubject/ClassIndex";
            }
            function redirectToEdit() {
                var id = $("#Id").val();
                window.location.href = 'Edit?id=' + id;
            }

            function Delete() {
                $("#myModal1").modal('show');
            }
            function cnfmDisable() {
                var id = $("#ID").val();
                window.location.href = "/AspNetSubject/DeleteSubject?id=" + id;
            }


        </script>

        <h4>Subject Detail</h4>
        <div class="col-md-offset-2 col-md-4">
            @if (ViewBag.Error != null)
            {
                <span class="text-danger">@ViewBag.Error</span>
            }
        </div>

        <input type="hidden" value="@Model.Id" id="ID" />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    <label class="control-label col-md-1 col-lg-1">Subject Name:<span class="red-mark">*</span></label>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SubjectName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubjectName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-1 col-lg-1">Class Name:<span class="red-mark">*</span></label>
                    <div class="col-md-6">

                        @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-1 col-lg-1">IsMandatory:<span class="red-mark">*</span></label>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.IsManadatory, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-1 col-lg-1">Points:<span class="red-mark">*</span></label>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-1 col-lg-1">Teacher Name:<span class="red-mark">*</span></label>
                    <div class="col-md-6">

                        @Html.EditorFor(model => model.AspNetUser.AspNetEmployees.FirstOrDefault().Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubjectName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-lg-offset-1 col-lg-offset-1 col-md-6">
                        <button type="button" id="back" class="btn btn-default" onclick="redirect()">Back</button>
                    @if (this.User.IsInRole("Admin"))
                    {
                       <button type="button" id="edit" class="btn btn-primary" onclick="redirectToEdit()">Edit</button>
                       @*<button type="button" id="delete" class="btn btn-default pull-right" onclick="Delete()">Disable</button>*@
                    }
                    </div>
                </div>
              

            </div>
        }
        <div>
        </div>


    </div>
</div>
<div class="modal fade" id="myModal1" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Complete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Do you really want to delete this Subject?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="cnfmDisable()">Confirm</button>
            </div>
        </div>
    </div>
</div>