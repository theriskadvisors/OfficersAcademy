@model SEA_Application.Models.AspNetParentTeacherMeeting
@{
    ViewBag.Title = "Create";

    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Active",
        Value = "Active"
    });
    listItems.Add(new SelectListItem
    {
        Text = "InActive",
        Value = "InActive",
    });
}

<script src="~/AdminLTE/selectone.js"></script>

<script>
    $(document).ready(function () {

        $("#Title").prop('required', true);
        $("#Description").prop('required', true);
        $("#Date").prop('required', true);
        $("#Date").prop('type', 'date');
        $("#Time").prop('required', true);
        $("#Time").prop('type', 'time');
        $("#Status").prop('required', true);

    });
</script>
<label>@Html.ActionLink("Home", "Dashboard", "Account") >  @Html.ActionLink("Parent Teacher Meeting", "Index", "AspNetParentTeacherMeetings") > <a><b>Create</b></a> </label>
<h4>Create</h4>
<div class="box box-primary">
    <div class="box-title"></div>
    <div class="box-body">
        <div class="col-md-12">
            <div class="form-three widget-shadow">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="forms form-horizontal">
                        <h4 class="orange">Parent Teacher Meeting &nbsp;</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.Status, listItems,  new { @class = "form-control"  })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-lg-offset-1 col-md-2">
                                <input type="submit" value="Create" class="btn btn-primary" />
                                <input class="btn btn-default" onclick="redirect()" value="Cancel" type="button" />
                            </div>                         
                        </div>
                    </div>
                }
                
            </div>
        </div>
</div>
</div>

<script>
    function redirect() {
        window.location.href = "Index";
    }
</script>