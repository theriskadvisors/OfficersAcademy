@model SEA_Application.Models.AspNetLessonPlan
<script type="text/javascript" src="http://js.nicedit.com/nicEdit-latest.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        bkLib.onDomLoaded(function () { });
        $('#cancel').click(function () {
            window.location.href = '@Url.Action("Dashboard", "Account")';
        });

   
        $("#ClassID").click(function () {
            var selectedClass = $("#ClassID").val();
            $.get('@Url.Action("SubjectsByClass","AspNetTopic")',
                { id: selectedClass }, function (data) {
                    $('#SubjectID').html('');
                    $('#SubjectID').prop('disabled', false);
                    $.each(data, function (i, item) {
                        $('#SubjectID').append('<option value=' + item.Id + '>' + item.SubjectName + '</option>');
                    });

                });
        });

        $("#Class").click(function () {
            var selectedClass = $("#Class").val();
            $.get('@Url.Action("SubjectsByClass","AspNetTopic")',
                { id: selectedClass }, function (data) {
                    $("select[name*='Subject'").html('');
                    $("select[name*='Subject'").prop('disabled', false);
                    $.each(data, function (i, item) {
                        $("select[name*='Subject'").append('<option value=' + item.Id + '>' + item.SubjectName + '</option>');
                    });

                });
        });


        $("#SubjectID").click(function () {
            var selectedSubject = $("#SubjectID").val();

            $.get('@Url.Action("ChapterBySubject","AspNetTopic")',
                { id: selectedSubject }, function (data) {
                    $('#ChapterID').html('');
                    $('#ChapterID').prop('disabled', false);
                    $.each(data, function (i, item) {
                        $('#ChapterID').append('<option value=' + item.Id + '>' + item.ChapterName + '</option>');
                    });

                });
        });

        $("#ChapterID").click(function () {
            var selectedChapter = $("#ChapterID").val();

            $.get('@Url.Action("TopicByChapter", "AspNetTopic")',
                { id: selectedChapter }, function (data) {
                    $('#TopicID').html('');
                    $('#TopicID').prop('disabled', false);
                    $.each(data, function (i, item) {
                        $('#TopicID').append('<option value=' + item.Id + '>' + item.TopicName + '</option>');
                    });

                });
        });





        $("#btnAdd").bind("click", function () {

            $("#breakdowntable").append(GetDynamicTextBox(""));

            area2 = new nicEditor({ fullPanel: true }).panelInstance('Description' + (i - 1) + '');

            // CKEDITOR.replace($('#TextBoxContainerTable tr:last td:nth-child(2) textarea').attr('name'));

            $('#breakdowntable tr:last #first').append($("#HeadingID").clone());
            $('#btnRemove').click(function () {
                $(this).closest('tr').remove();
            })


        });

        $('#save_button').click(function () {
            lessonPlan = Object.create(lessonPlan);
            lessonPlan.lessonPlanNo = $('#lessonPlanNo').val();
            lessonPlan.classID = $('#ClassID').val();
            lessonPlan.subjectID = $('#SubjectID').val();
            lessonPlan.Date = $('#Date').val();
            lessonPlan.ChapterID = $('#ChapterID').val();
            lessonPlan.Topics = [];
            $('#TopicID > option:selected').each(function () {
                lessonPlan.Topics.push($(this).val());
            });
            lessonPlan.Duration = $('#Duration').val();
            lessonPlan.BreakDown = [];
            $('table tbody tr').each(function () {
                BreakDown = Object.create(BreakDown);
                BreakDown.HeadingID = $('#HeadingID', this).val();


                var nicInstance = nicEditors.findEditor($('textarea', this).attr('id'));
                BreakDown.Description = nicInstance.getContent();

                BreakDown.Minutes = $('#Minutes', this).val();
                BreakDown.Resources = $('#Resources', this).val();
                lessonPlan.BreakDown.push(BreakDown);
            });


            console.log(JSON.stringify(lessonPlan));
            LessonPlan = JSON.stringify({ 'LessonPlan': lessonPlan });

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '/AspNetLessonPlan/AddLessonPlan',
                data: LessonPlan,
                success: function () {
                    $('#partial').html('Attendance Successfully Save');
                },
                failure: function (response) {
                    $('#partial').html('Something went wrong');
                }
            });
        });

    });


    function SomeDeleteRowFunction(btndel) {
        if (typeof (btndel) == "object") {
            $(btndel).closest("tr").remove();
        } else {
            return false;
        }
    }

    var i = 0;
    function GetDynamicTextBox(value) {
        var html = '<tr><td> <form class="form-horizontal"> <div class="form-group" ><lable class="control-label col-md-2"><b>Heading</b></lable><div class="col-md-10" id="first"></div></div><div class="form-group"><lable class="control-label col-md-2"><b>Description</b></lable><div class="col-md-10"><textarea id="Description' + i + '" style="width: 100%; height:250px;" ></textarea></div></div><div class="form-group"><lable class="control-label col-md-2"><b>Minutes</b></lable><div class="col-md-10"><input type="text" id="Minutes" placeholder="Minutes" class="form-control"></div></div><div class="form-group"><lable class="control-label col-md-2"><b>Resources</b></lable><div class="col-md-10"><input type="text" id="Resources" placeholder="Resources" class="form-control"></div></div><div class="form-group"><div class="col-md-12"> <button  type="button" class="btn btn-danger pull-right col-md-2" onclick="SomeDeleteRowFunction(this);">Delete Breakdown</button></div></div></form></td></tr>';
        i++;
        return html;
    }

    var BreakDown =
        {
            HeadingID: '',
            Description: '',
            Minutes: '',
            Resources: '',
        };
    var lessonPlan = {
        lessonPlanNo: '',
        classID: '',
        subjectID: '',
        Date: '',
        ChapterID: '',
        Topics: [],
        Duration: '',
        BreakDown: []
    };


</script>
<h2 class="orange">Add Lesson Plan &nbsp; <i class="fa fa-plus" aria-hidden="true"></i></h2>

<div class="row">
    <div class="col-md-12">
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tab_1" data-toggle="tab">Add Lesson Plan</a></li>
                <li><a href="#tab_2" data-toggle="tab">Upload Excel File</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tab_1">
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="orange">Create A Lesson Plan &nbsp; <i class="fa fa-pencil" aria-hidden="true"></i></h3>
                        </div>
                        <form class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="box-body">
                                <div class="form-group" hidden>
                                    <lable class="control-label col-md-2"><b>Heading</b></lable>
                                    <div class="col-md-10">
                                        @Html.DropDownList("HeadingID", null, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LessonPlanNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.LessonPlanNo, new { htmlAttributes = new { @class = "form-control", @id = "lessonPlanNo" } })
                                        @Html.ValidationMessageFor(model => model.LessonPlanNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2">Class</label>
                                    <div class="col-md-10">
                                        @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SubjectID, "SubjectID", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("SubjectID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @id = "Date" } })
                                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2">Select Chapter</label>
                                    <div class="col-md-10">
                                        <select class="form-control" id="ChapterID" disabled></select>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2">Select Topic</label>
                                    <div class="col-md-10">
                                        <select multiple class="form-control" id="TopicID" disabled></select>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", @id = "Duration" } })
                                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="box-footer">
                                <div class="col-md-offset-2 col-md-10">
                                    <button id="btnAdd" type="button" class="btn btn-primary">Add Breakdown</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <div class="tab-pane" id="tab_2">
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="orange">Add Lesson Plan from File &nbsp; <i class="fa fa-file-excel-o" aria-hidden="true"></i></h3>
                        </div>
                        @using (Html.BeginForm("LessonPlanfromFile", "AspNetLessonPlan", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="box-body">
                                <div class="form-group">
                                    <lable class="control-label col-md-2"><b>Class</b></lable>
                                    <div class="col-md-10">
                                        @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control", id = "Class" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SubjectID, "SubjectID", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("SubjectID", null, htmlAttributes: new { @class = "form-control", name = "Subject" })
                                        @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @id = "Date" } })
                                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="btn btn-default btn-file col-md-offset-2">
                                        <i class="fa fa-paperclip"></i> Attachment
                                        <input type="file" id="LessonPlan" name="LessonPlan">
                                    </div>
                                    <div class="col-md-offset-2">
                                        <p class="help-block">Max. 32MB</p>
                                    </div>
                                </div>
                            </div>
                            <div class="box-footer">
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button type="submit" class="btn btn-primary">Save</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="orange">Lesson Plan Breakdown &nbsp; <i class="fa fa-database" aria-hidden="true"></i></h3>
    </div>
    <div class="box-body">
        <table class="table table-striped table-bordered">
            <tbody id="breakdowntable" class="forms form-horizontal"></tbody>
        </table>
    </div>
    <div class="box-footer">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="save_button" type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>