@model SEA_Application.Models.AspNetLessonPlan
<script type="text/javascript" src="http://js.nicedit.com/nicEdit-latest.js"></script>
<script type="text/javascript">

    $(document).ready(function () {

        bkLib.onDomLoaded(function () { });
        $('#cancel').click(function () {
            window.location.href = '@Url.Action("Dashboard", "Account")';
        });

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        var selectedClass = $("#ClassID").val();
        $.get('@Url.Action("SubjectsByClass","AspNetTopic")',
            { id: selectedClass }, function (data) {
                $('#SubjectID').html('');
                $('#SubjectID').prop('disabled', false);
                $.each(data, function (i, item) {
                    $('#SubjectID').append('<option value=' + item.Id + '>' + item.SubjectName + '</option>');
                });
                var selectedSubject = $("#SubjectID").val();

                $.get('@Url.Action("ChapterBySubject", "AspNetTopic")',
                    { id: selectedSubject }, function (data) {
                        $.each(data, function (i, item) {
                            $('#ChapterID').append('<option value=' + item.Id + '>' + item.ChapterName + '</option>');
                        });

                        var LessonID=@Model.Id;
                        $.get('@Url.Action("ChapterByLessonPlan")',
                                    { id: LessonID }, function (data) {

                                            $("#ChapterID option[value='" + data + "']").prop("selected", true);


                        var selectedChapter = $("#ChapterID").val();
                        $.get('@Url.Action("TopicByChapter", "AspNetTopic")',
                            { id: selectedChapter }, function (data) {
                                $('#TopicID').html('');
                                $('#TopicID').prop('disabled', false);
                                $.each(data, function (i, item) {
                                    $('#TopicID').append('<option value=' + item.Id + '>' + item.TopicName + '</option>');
                                });
                                $.get('@Url.Action("TopicByLesson", "AspNetTopic")',
                                    { id: LessonID }, function (data) {
                                        $.each(data, function (i, item) {

                                            $("#TopicID option[value='" + item + "']").prop("selected", true);
                                        });

                                    });
                            });
                    });
                    });
            });
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


        $("#ClassID").click(function () {
            var selectedClass = $("#ClassID").val();
            $.get('@Url.Action("SubjectsByClass","AspNetTopic")',
                { id: selectedClass }, function (data) {
                    $('#SubjectID').html('');
                    $('#SubjectID').prop('disabled', false);
                    $.each(data, function (i, item) {
                        $('#SubjectID').append('<option value=' + item.Id + '>' + item.SubjectName + '</option>');
                    });
                });
        });


                    $("#SubjectID").click(function () {
                        var selectedSubject = $("#SubjectID").val();

                        $.get('@Url.Action("ChapterBySubjectLESSON", "AspNetTopic")',
                            { id: selectedSubject }, function (data) {
                                $('#ChapterID').html('');
                                $('#ChapterID').prop('disabled', false);
                                $.each(data, function (i, item) {
                                    $('#ChapterID').append('<option value=' + item.Id + '>' + item.ChapterName + '</option>');
                                });
                            });
                    });

                    $("#ChapterID").click(function () {
                        var selectedChapter = $("#ChapterID").val();

                        $.get('@Url.Action("TopicByChapter", "AspNetTopic")',
                            { id: selectedChapter }, function (data) {
                                $('#TopicID').html('');
                                $('#TopicID').prop('disabled', false);
                                $.each(data, function (i, item) {
                                    $('#TopicID').append('<option value=' + item.Id + '>' + item.TopicName + '</option>');
                                });

                            });
                    });





                    $("#btnAdd").bind("click", function () {

                        $("#breakdowntable").append(GetDynamicTextBox(""));

                        area2 = new nicEditor({ fullPanel: true }).panelInstance('Description' + (i - 1) + '');

                        $('#breakdowntable tr:last #first').append($("#HeadingID").clone());
                        $('#btnRemove').click(function () {
                            $(this).closest('tr').remove();
                        })


                    });

                    $('#save_button').click(function () {
                        lessonPlan = Object.create(EditLessonPlanType);
                        lessonPlan.lessonPlanNo = $('#lessonPlanNo').val();
                        lessonPlan.LessonPlanID = @Model.Id;
                        lessonPlan.classID = $('#ClassID').val();
                        lessonPlan.subjectID = $('#SubjectID').val();
                        lessonPlan.Date = $('#Date').val();
                        lessonPlan.ChapterID = $('#ChapterID').val();
                        lessonPlan.Topics = [];
                        $('#TopicID > option:selected').each(function () {
                            lessonPlan.Topics.push($(this).val());
                        });
                        lessonPlan.Duration = $('#Duration').val();

                       LessonPlan = JSON.stringify({ 'LessonPlan': lessonPlan });
                        $.ajax({
                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            type: 'POST',
                            url: '/AspNetLessonPlan/EditLessonPlan',
                            data: LessonPlan,
                            success: function () {
                                $('#partial').html('Attendance Successfully Save');
                            },
                            failure: function (response) {
                                $('#partial').html('Something went wrong');
                                alert("error");
                            }
                        });
                    });

        var EditLessonPlanType = {
            LessonPlanID: '',
                lessonPlanNo: '',
                classID: '',
                subjectID: '',
                Date: '',
                ChapterID: '',
                Topics: [],
                Duration: ''
            };
        });

</script>
<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">Add Lesson Plan</h3>
    </div>
    <form class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="box-body">

            <div class="form-group">
                @Html.LabelFor(model => model.LessonPlanNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.LessonPlanNo, new { htmlAttributes = new { @class = "form-control", @id = "lessonPlanNo" } })
                    @Html.ValidationMessageFor(model => model.LessonPlanNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2"><b>Class</b></label>
                <div class="col-md-6">
                    @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubjectID, "SubjectID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("SubjectID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @id = "Date" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2"><b>Select Chapter</b></label>
                <div class="col-md-6">
                    <select class="form-control" id="ChapterID"></select>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2"><b>Select Topic</b></label>
                <div class="col-md-6">
                    <select multiple class="form-control" id="TopicID"></select>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", @id = "Duration" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-offset-4">
                <button id="save_button" type="button" class="btn btn-primary col-md-1">Save</button>
                <button type="button" class="btn btn-danger col-md-offset-1 col-md-1" onclick="window.location.href='/AspNetLessonPlan/View_LessonPlan'">Back</button>
            </div>
        </div>
    </form>
</div>
