@model SEA_Application.Models.AspNetFinanceLedger

@{
    ViewBag.Title = "Create";
}

<script src="~/AdminLTE/selectone.js"></script>

<script>

    $(document).ready(function () {


        $("#LedgerCode").prop('required', true);
        $("#Name").prop('required', true);
        $("#Type").prop('required', true);
        $("#Balance").prop('required', true);
        $("#Balance").prop('type', 'number');
        $("#Balance").val(0);

        $("#Individual [value='']").remove();

        $('#LedgerCode').bind('blur', function () {

            var Head = $("#HeadCode").val();
            var CODE = $("#LedgerCode").val();

            var subLedger = Head + "-" + CODE;

            $("#Code").val(subLedger);
            
            console.log(Head+" "+subLedger)
            if (true) {
                $.ajax({
                    type: "POST",
                    url: "/AspNetFinanceLedgers/HeadFinder",
                    data: { 'Head': Head, "Code": subLedger },
                    success: function (data) {
                        $('#Head').val(data.head);
                        $('#FakeHidden').val(data.head);

                        if (data.status == "True") {
                            $("#submit").attr("disabled", true)
                            $("#partial").html("code is already added");
                        } else {
                            $("#submit").attr("disabled", false)
                            $("#partial").html("");
                        }

                        var type = $("LedgerType").val();
                        $("#Type option[value='" + type + "']").prop('selected', true);
                        $("#Type option[value='']").remove();

                    }
                });
            } // else {
            //    $('#Head').val("0");
            //    $('#FakeHidden').val("0");
            //}
        });

        $('#Head').hide();
        $("#Type").attr("readonly", true);
        $("#Code").prop("readonly", true);
        run();
    });

    function Check() {
        var cOdE = $("#LedgerCode").val();
        if (cOdE == "") {
            $("#partial").html("Please write ledger code here");
        } else {
            $("#partial").html(" ");
        }
    }

    function run() {

        var type = $("#LedgerType").val();

        $("#Type option[value='" + type + "']").prop('selected', true);
        $("#Type option[value='']").prop('selected', false);
        
    }
   

</script>

<label>@Html.ActionLink("Home", "Dashboard", "Account") > <a href="#" class="sidebar-toggle navigate" data-toggle="offcanvas" style="background-color:#F7F7F7 !important">Accounts Management</a> > @Html.ActionLink("Ledger", "Index", "AspNetFinanceLedgers") > <a href="#"><b>Create</b></a> </label>
<h4>Create </h4>
   <div class="row">
     <div class="col-md-12">
       <div class="nav-tabs-custom">
         <ul class="nav nav-tabs">
           <li class="active"><a href="#tab_1" data-toggle="tab">Add Finance Ledger</a></li>
           <li><a href="#tab_2" data-toggle="tab">Upload Excel File</a></li>
         </ul>
               <div class="tab-content" style="background-color:#ECF0F5; padding:10px 0px 0px 0px;">
                  <div class="tab-pane active" id="tab_1">
                    <div class="form-three widget-shadow">
                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="box box-primary">
                                        <div class="box-body">
                                            <div class="form-horizontal">

                                                <hr />
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            <div class="col-md-6">
                                                                <input type="text" id="HeadCode" value="@ViewBag.LedgerCode" class="form-control" disabled />
                                                            </div>
                                                            <div class="col-md-6">
                                                                <input type="text" id="LedgerCode" class="form-control" placeholder="add ledger code hare" />
                                                            </div>
                                                            
                                                        </div>
                                                        </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-1 col-lg-1">Ledger Code</label>
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger", @id = "partial" })
                                                        @*<p id="partial" class="text-danger"></p>*@
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                                                    <div class="col-md-6">
                                                        <input type="hidden" id="LedgerType" value="@ViewBag.LedgerType" />
                                                        @Html.DropDownList("Type", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group" style="display:none">
                                                    <label class="col-md-1 col-lg-1 control-label" >Show Individual</label>
                                                    <div class="col-md-6">
                                                        <select name="individual" id="Individual" class="form-control" ><option value="False">False</option><option value="True">True</option></select>
                                                    </div>
                                                </div>
                                                
                                                <div class="form-group" style="display:none">
                                                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                                                    <div class="col-md-6">
                                                        <div class="checkbox">
                                                            @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group" style="display:none">
                                                    @Html.LabelFor(model => model.IsGroup, htmlAttributes: new { @class = "control-label col-md-1 col-lg-1" })
                                                    <div class="col-md-6">
                                                        <div class="checkbox">
                                                            @Html.EditorFor(model => model.IsGroup, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.IsGroup, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group" style="display:none">
                                                    @Html.LabelFor(model => model.TakeAble, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        <div class="checkbox">
                                                            @Html.EditorFor(model => model.TakeAble, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.TakeAble, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group" style="display:none">
                                                    @Html.LabelFor(model => model.Head, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        <input type="text" id="FakeHidden" class="form-control" disabled />
                                                        @Html.EditorFor(model => model.Head, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Head, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <hr />
                                                <div class="form-group">
                                                    <div class="col-md-offset-2 col-lg-offset-1 col-md-6">
                                                        <input type="submit" value="Create" id="submit" onclick="Check()" class="btn btn-primary" />
                                                        <input type="submit" value="Back" id="submit" onclick="window.location.href = 'Index'" class="btn btn-default" />
                                                 </div>
                                                 
                                                </div>

                                                @*<div class="row">
                                        <button type="button" class="btn btn-primary col-md-offset-5" data-toggle="modal" data-target="#myModal">Upload from excel file</button>
                                        <span class="text-danger">@Html.Raw(TempData["Error"])</span>
                                    </div>*@
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        @*<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Chose Excel file</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>

                                    @using (Html.BeginForm("Excel_Data", "AspNetFinanceLedgers", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                    {
                                        <div class="modal-body">
                                            <span>Excel file</span><input type="file" name="excelfile" />
                                        </div>

                                                        <div class="modal-footer">
                                                            <input type="button" class="btn btn-primary" data-dismiss="modal" value="Close" />
                                                            <input type="submit" class="btn btn-primary" value="Import" />
                                                        </div>
                                    }
                                </div>
                            </div>
                        </div>*@
                                    
                <div class="tab-pane" id="tab_2">
                    <div class="box box-primary">
                        <div class="box-header with-border"><h3 class="orange">Upload Excel File &nbsp; <i class="fa fa-file-excel-o" aria-hidden="true"></i></h3></div>
                        <div class="form-three widget-shadow">
                                @using (Html.BeginForm("Excel_Data", "AspNetFinanceLedgers", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    <div class="control-label col-md-3"><b>Excel File</b></div>
                                    <div class="col-md-4">
                                        <input id="excelfile" name="excelfile" type="file" />
                                        <span class="text-danger">@Html.Raw(TempData["Error"])</span>

                                    </div>
                                </div>
                                <br />
                                 <br />
                                  <div class="box-footer">
                                    <div class="form-group">
                                      <div class="col-lg-2 col-md-2">                                            
                                        <input type="submit" value="Submit" class="btn btn-primary" />
                                       </div>
                                     </div>
                                  </div>
                                }
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>

         @*</div>
        </div>*@


                @*@section Scripts {
                        @Scripts.Render("~/bundles/jqueryval")
                    }*@
                @*<script>

                        $(document).ready(function () {
                            $("#Type option[value='']").prop('selected', false);
                            run();
                        });
                    </script>*@
